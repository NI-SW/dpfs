
// configure nvme over rdma
cd spdk 
./configure --with-rdma --with-fio=../fio 
// --with-shared


/*
  to build spdk 
  yum install -y gcc-c++ libaio-devel numactl-devel openssl-devel CUnit-devel libuuid-devel


*/

// use nvme_tcp
// ports
# echo ipv4 > addr_adrfam
# echo tcp > addr_trtype
# echo 0.0.0.0 > addr_traddr
# echo 50658 > addr_trsvcid
// subsystems
# echo /dev/nvme0n2  > device_path
# echo 1 > enable


// nvme over rdma
modprobe nvme_fabrics
modprobe nvme_tcp
modprobe nvme_rdma
modprobe nvmet
modprobe nvmet_rdma
modprobe rdma_rxe
rdma link add rxe_0 type rxe netdev ens160

nvme discover -t rdma -a 192.168.34.12 -s 4420

// not must
modprobe nvme_core
modprobe irdma
modprobe rpcrdma
modprobe rdma_ucm
modprobe rdma_cm
modprobe rdma_rxe
modprobe vmw_pvrdma


nvme远程连接时注意防火墙问题

安装依赖：：
libnvme
libverto
nvme-cli
nvmetcli
libnvme-devel
librdmacm
rdma-core-devel
rdma-core
libverto-libev
libverto-devel
perftest-23*


./rpc.py nvmf_create_transport -t RDMA -u 8192 -i 32768 -c 8192

./rpc.py nvmf_get_subsystems
[
  {
    "nqn": "nqn.2014-08.org.nvmexpress.discovery",
    "subtype": "Discovery",
    "listen_addresses": [],
    "allow_any_host": true,
    "hosts": []
  }
]

./rpc.py nvmf_subsystem_add_listener -t RDMA -a 192.168.34.12 -f ipv4 -s 50658  nqn.2014-08.org.nvmexpress.discovery



Block扩容策略
块容量不够时向后追加块，追加的块的数量为： <equation>()




SPDK attach:

start up -> nvme_tgt
./rpc.py bdev_nvme_attach_controller -b nvme1 -t rdma -a 192.168.34.12 -f ipv4 -s 4420 -n nvme-subsys

